print(i)
print(data[[i]]$name)
}
data[[5]]
data <- toJSON(data)
install.packages('swirl')
library(swirl)
install_from_swirl('Getting and Cleaning Data')
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(plyr)
library(dplyr)
packageVersion('dplyr')
cran <- tbl_df(mydf)
rm(mydf)
rm('mydf')
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran, package == 'swirl')
filter(cran, r_versino == '3.1.1', country == 'US')
filter(cran, r_version == '3.1.1', country == 'US')
?Comparison
filter(cran, r_version <= '3.0.2', country == 'IN')
filter(cran, country == 'US' | country == 'IN')
filter(cran, size > 100500, r_os == 'linux-gnu')
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3,correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm('mydf')
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
?n
submit()
load(dplyr)
library(dplyr)
submit()
conflicts()
?n
library(plyr)
library(dplyr)
submit()
library(xlsx)
setwd("C:/Users/Mike Cahill/RepData_PeerAssessment1")
library(lubridate)
library(dplyr)
dat <- read.csv('activity.csv')
dat <- mutate(dat, date = ymd(date))
dat <- mutate(dat, interval = formatC(interval, width = 4, flag = '0'))
View(dat)
?date.format
?format
time <- strptime('0005', '%H%M')
time
format(time, '%H%M')
format(time, '%H:%M')
new_time <- format(time, '%H:%M')
new_time
class(new_time)
?format
?lubridate
?date.format
?format.date
?formateDate
?Date.format
?strftime
strptime('0005','%H%M')
strftime('0005','%H%M')
?date.format
?format.date
?Date.format
?Format.date
?as.Date
class(time)
time
hour(time)
minute(time)
View(dat)
dat$interval <- strptime(dat$interval, format = '%H%M')
View(dat)
dat <- mutate(date, minutes = (hour(interval) * 60 + minute(interval)))
dat <- mutate(dat, minutes = (hour(interval) * 60 + minute(interval))
dat <- mutate(dat, minutes = hour(interval) * 60 + minute(interval))
View(dat)
dat <- mutate(dat, interval = format(interval, '%H:%M))
dat <- mutate(dat, interval = format(interval, '%H:%M'))
View(dat)
step_interval <- tapply(dat$steps, dat$interval, mean, na.rm = TRUE)
intervals <- unique(dat$interval)
plot(step_interval ~ minutes, type='l')
minutes
minutes <- unique(dat$minutes)
plot(step_interval ~ minutes, type='l')
24*60
plot(step_interval ~ minutes, type='l',yaxt = 'n)
plot(step_interval ~ minutes, type='l',yaxt = 'n)
plot(step_interval ~ minutes, type='l', yaxt = 'n')
?plot
plot(step_interval ~ minutes, type='l', xaxt = 'n')
?axes
?axis
seq(0,1440,60)
axis(1, at = seq(0, 1440, 60))
axis(1, at = seq(0, 1440, 60), labels = c('12am','3am', '6am', '9am', '12pm', '3pm','6pm','9pm'))
axis(1, at = seq(0, 1440, 60), labels = c(12, 1:12, 1:12)
axis(1, at = seq(0, 1440, 60), labels = c(12, 1:12, 1:12))
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 60), labels = c(12, 1:12, 1:12))
axis(1, at = seq(0, 1440, 60), label = FALSE)
axis(1, at = seq(0, 1440, 60), label = FALSE)
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 60), label = FALSE)
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
axis(1, at = seq(0, 1440, 60), label = FALSE)
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'), cex.label = .75)
axis(1, at = seq(0, 1440, 60), label = FALSE)
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'), cex.lab = .75)
axis(1, at = seq(0, 1440, 60), label = FALSE)
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'), cex.lab = .75)
axis(1, at = seq(0, 1440, 60), label = FALSE)
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'), cex.lab = .4)
axis(1, at = seq(0, 1440, 60), label = FALSE)
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'), cex.lab = .4)
axis(1, at = seq(0, 1440, 60), label = FALSE)
?cex
??cex
?par
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'), cex = .4)
axis(1, at = seq(0, 1440, 60), label = FALSE)
plot(step_interval ~ minutes, type='l', xaxt = 'n', cex.lab = .4)
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
axis(1, at = seq(0, 1440, 60), label = FALSE)
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'), cex.axis = .7)
axis(1, at = seq(0, 1440, 60), label = FALSE)
par(cex.axis = .6, mgp = c(2, .5, 0))
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
axis(1, at = seq(0, 1440, 60), label = FALSE)
par(cex.axis = .5, mgp = c(2, .25, 0))
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
axis(1, at = seq(0, 1440, 60), label = FALSE)
par(cex.axis = .5, mgp = c(2, .3, 0))
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
axis(1, at = seq(0, 1440, 60), label = FALSE)
par(cex.axis = .5, mgp = c(2, .35, 0))
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
axis(1, at = seq(0, 1440, 60), label = FALSE)
par(cex.axis = .5, mgp = c(2, .45, 0))
plot(step_interval ~ minutes, type='l', xaxt = 'n')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
axis(1, at = seq(0, 1440, 60), label = FALSE)
.5^8
.5^7
4*.0078
choose(8,7)
choose(8,7) * .5^8 + choose(8,8) * .5^8
pbinom(6, prob = .5, lower.tail = FALSE)
pbinom(6, size = 8, prob = .5, lower.tail = FALSE)
?pbinom
pbinom(7, size = 8, prob = .5, lower.tail = FALSE)
qnorm(.975)
ppois(14, lambda = 15)
ppois(16, lambda = 15)
ppois(14, lambda = 1.5)
ppois(10, lambda = 15)
setwd("C:/Users/Mike Cahill/RepData_PeerAssessment1/doc")
max(step_interval)
which(step_interval == max(step_interval))
?which
step_interval
class(step_interval)
dim(step_interval)
step_interval[2]
step_interval[2][1]
?tapply
?apply
?tapply
max(step_interval)
step_interval[[2]]
which(step_interval == 206.1698)
which(step_interval == max(step_interval))
which(max(step_interval))
max(step_interval)
max <- max(step_interval)
max
which(step_interval == max)
step_interval[104]
step_interval[which(step_interval == max)]
max <- max(step_interval)
print(max)
step_interval[which(step_interval == max)]
step_interval[1]
step_interval[1][1]
step_interval[1][2]
step_interval[[1]]
dat$interval[which(step_interval == max)]
which(step_interval == max)
max_pos <- which(step_interval == max)
intervals = unique(dat$intervals)
intervals[max_pos]
max_pos <- which(step_interval == max)
intervals <- unique(dat$interval)
intervals[max_pos]
max <- max(step_interval)
print(max)
is.na(dat$steps)
sum(is.na(dat$steps))
sum(is.na(dat$date))
sum(is.na(dat$interval))
sum(is.na(dat$minutes))
NAs <- lapply(dat, sum(is.na))
NAs <- lapply(dat, function(sum){
sum <- sum(is.na)
})
?is.na
?apply
?is.na
step_interval
step_interval$23:15
step_interval['23:15']
imputed_steps <- vector()
for (i in 1:length(dat$steps)){
if (is.na(dat$steps[i])){
imputed_steps[i] <- step_interval[dat$interval[i]]
}
else{
imputed_steps[i] <- dat$steps[i]
}
}
mutate(dat, imputed <- imputed_steps)
dat <- mutate(dat, imputed <- imputed_steps)
remove(imputed)
dat <- mutate(dat, imputed <- imputed_steps)
View(dat)
remove(imputed)
dat <- select(dat, 1:4)
View(dat)
dat <- mutate(dat, imputed = imputed_steps)
View(dat)
new_dat <- dat %>%
mutate(impute_steps = impute_vector) %>%
select(-steps)
impute_vector <- vector()
for (i in 1:length(dat$steps)){
if (is.na(dat$steps[i])){
impute_vector[i] <- step_interval[dat$interval[i]]
}
else{
impute_vector[i] <- dat$steps[i]
}
}
new_dat <- dat %>%
mutate(impute_steps = impute_vector) %>%
select(-steps)
View(new_dat)
dat <- read.csv('activity.csv')
setwd("C:/Users/Mike Cahill/RepData_PeerAssessment1")
dir()
dat <- read.csv('activity.csv')
dat <- mutate(dat, date = ymd(date))
dat <- mutate(dat, interval = formatC(interval, width = 4, flag = '0')) #zero pad interval column
dat$interval <- strptime(dat$interval, format = '%H%M') #convert interval to datetime object
dat <- mutate(dat, minutes = hour(interval) * 60 + minute(interval)) #create minutes column
dat <- mutate(dat, interval = format(interval, '%H:%M')) #format interval column
step_day <- tapply(dat$steps, dat$date, sum, na.rm = TRUE)
hist(step_day, main = 'Histogram of number of steps in a day', xlab = 'Number of Steps', ylab = 'frequency(days)', breaks = c(0,2500,5000,7500,10000,12500,15000,17500,20000,22500,25000))
mean(step_day)
median(step_day)
step_interval <- tapply(dat$steps, dat$interval, mean, na.rm = TRUE)
minutes <- unique(dat$minutes)#variable for x-axis
par(cex.axis = .5, mgp = c(2, .45, 0))
plot(step_interval ~ minutes, type='l', xaxt = 'n', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day')
axis(1, at = seq(0, 1440, 180), label = c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am'))
axis(1, at = seq(0, 1440, 60), label = FALSE)
max <- max(step_interval)
print(max)
max_pos <- which(step_interval == max)
intervals <- unique(dat$interval)
intervals[max_pos]
sum(is.na(dat$steps))
impute_vector <- vector()
for (i in 1:length(dat$steps)){
if (is.na(dat$steps[i])){
impute_vector[i] <- step_interval[dat$interval[i]]
}
else{
impute_vector[i] <- dat$steps[i]
}
}
new_dat <- dat %>%
mutate(impute_steps = impute_vector) %>%
select(-steps)
View(dat)
View(new_dat)
?format
step_interval <- format(step_interval, digits = 2)
remove(new_dat)
new_dat <- dat %>%
mutate(impute_steps = impute_vector) %>%
mutate(impute_steps = format(impute_steps, digits = 2))
select(-steps)
View(new_dat)
remove(new_dat)
new_dat <- dat %>%
mutate(impute_steps = impute_vector) %>%
mutate(impute_steps = format(impute_steps, digits = 2)) %>%
select(-steps)
View(new_dat)
impute_step_day <- tapply(new_dat$steps, new_dat$date, sum)
hist(impute_step_day, main = 'Histogram of number of steps in a day', xlab = 'Number of Steps', ylab = 'frequency(days)', breaks = c(0,2500,5000,7500,10000,12500,15000,17500,20000,22500,25000))
impute_step_day <- tapply(new_dat$impute_steps, new_dat$date, sum)
lapply(new_dat,class)
impute_step_day <- tapply(new_dat$impute_steps, as.factor(new_dat$date), sum)
remove(new_dat)
new_dat <- dat %>%
mutate(impute_steps = impute_vector) %>%
mutate(impute_steps = as.numeric(format(impute_steps, digits = 2)) %>%
select(-steps)
new_dat <- dat %>%
mutate(impute_steps = impute_vector) %>%
mutate(impute_steps = as.numeric(format(impute_steps, digits = 2))) %>%
select(-steps)
lapply(new_dat,class)
impute_step_day <- tapply(new_dat$impute_steps, new_dat$date, sum)
hist(impute_step_day, main = 'Histogram of number of steps in a day', xlab = 'Number of Steps', ylab = 'frequency(days)', breaks = c(0,2500,5000,7500,10000,12500,15000,17500,20000,22500,25000))
mean(impute_step_day)
median(impute_step_day)
impute_step_day
mean(impute_step_day)
median(impute_step_day)
median(impute_step_day[1:17566])
median(impute_step_day[1:59])
median(impute_step_day[1:40])
class(impute_step_day)
mean(step_day)
median(step_day)
impute_step_day
median(impute_step_day[59:61])
median(impute_step_day[3:61])
median(impute_step_day[50:61])
?weekdays
?weekday
weekdays(new_dat$date)
new_dat <- mutate(new_dat, weekday = weekdays(date))
View(new_dat)
new_dat <- select(new_dat, -weekday)
View(new_dat)
?lapply
weekday_vect <- weekdays(new_dat$date)
str(weekday_fect)
str(weekday_vect)
weekday_vect <- sapply(weekday_vect, function(entry){
if (entry %in% c('Saturday','Sunday')){
entry <- 'Weekend'
}
else{
entry <- 'Weekday'
}
})
weekday_vect
str(weekday_vect)
new_dat <- mutate(new_dat, weekday = weekday_vect
)
View(new_dat)
class(new_dat$weekday)
new_dat <- mutate(new_dat, weekday = as.factor(weekday_vect)
new_dat <- mutate(new_dat, weekday = as.factor(weekday_vect))
class(new_dat$weekday)
library(lattice)
?xyplot
xyplot(new_dat$impute_steps ~ new_dat$minutes | new_dat$weekday)
step_interval_day <- tapply(new_dat$steps, new_dat$interval * new_dat$weekday)
step_interval_day <- tapply(new_dat$impute_steps, new_dat$interval * new_dat$weekday)
?tapply
step_interval_day <- tapply(new_dat$impute_steps, list(new_dat$interval,new_dat$weekday), mean)
step_interval_day
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(new_dat$interval,new_dat$weekday), mean))
View(step_interval_day)
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(new_dat$interval,new_dat$weekday), mean), row.names = FALSE)
View(step_interval_day)
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(new_dat$interval,new_dat$weekday), mean)
)
View(step_interval_day)
step_interval[,1]
step_interval_day[,1]
step_interval_day[,0]
step_interval_day$row.names
row.names(step_interval_day)
?melt
?dplyr
browseVignettes(package = 'dplyr')
library(tidyr)
?gather
gather(new_dat, day_type, steps, Weekday:Weekend)
gather(step_interval_day, day_type, steps, Weekday:Weekend)
step_interval_day <- gather(step_interval_day, day_type, steps, Weekday:Weekend)
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(new_dat$interval,new_dat$weekday), mean))
step_interval_day <- gather(step_interval_day, day_type, steps, Weekday:Weekend)
mutate(step_interval_day, interval = row.names(step_interval_day)
mutate(step_interval_day, interval = row.names(step_interval_day))
names <- row.names(step_interval_day)
mutate(step_interval_day, interval = names)
View(step_interval_day)
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(new_dat$interval,new_dat$weekday), mean))
step_interval_day <- gather(step_interval_day, day_type, steps, Weekday:Weekend)
View(step_interval_day)
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(new_dat$interval,new_dat$weekday), mean))
View(step_interval_day)
step_interval_day <- mutate(step_interval_day, Interval = names)
names <- row.names(step_interval_day)
step_interval_day <- mutate(step_interval_day, Interval = names)
View(step_interval_day)
step_interval_day <- gather(step_interval_day, day_type, steps, Weekday:Weekend)
View(step_interval_day)
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(as.factor(new_dat$minutes,new_dat$weekday), mean))
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(as.factor(new_dat$minutes),new_dat$weekday), mean))
View(step_interval_day)
names <- row.names(step_interval_day)
step_interval_day <- mutate(step_interval_day, minutes = names, Minutes = 60*hour(.))
step_interval_day <- gather(step_interval_day, day_type, steps, Weekday:Weekend)
View(step_interval_day)
step_interval_day <- as.data.frame(tapply(new_dat$impute_steps, list(as.factor(new_dat$minutes),new_dat$weekday), mean))
View(step_interval_day)
names <- row.names(step_interval_day)
step_interval_day <- mutate(step_interval_day, minutes = names)
View(step_interval_day)
class(step_interval_day$minutes)
step_interval_day <- mutate(step_interval_day, minutes = as.numeric(names)
step_interval_day <- mutate(step_interval_day, minutes = as.numeric(names))
View(step_interval_day)
class(step_interval_day$minutes)
step_interval_day <- gather(step_interval_day, day_type, steps, Weekday:Weekend)
View(step_interval_day)
?xyplot
xyplot(step_interval_day$steps ~ step_interval_day$minutes | step_interval_day$day_type)
xyplot(step_interval_day$steps ~ step_interval_day$minutes | step_interval_day$day_type, panel.grid = layout = c(1,2))
xyplot(step_interval_day$steps ~ step_interval_day$minutes | step_interval_day$day_type,layout = c(1,2))
xyplot(step_interval_day$steps ~ step_interval_day$minutes | step_interval_day$day_type,layout = c(1,2), pch = '-')
xyplot(step_interval_day$steps ~ step_interval_day$minutes | step_interval_day$day_type,layout = c(1,2), type = 'l')
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval'), xlab = 'Time of Day)
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day)
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day')
?xyplot
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,2440, 60)))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,2440, 60))))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,2440,60))))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,2440,60), label = FALSE)))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,2440,60), labels = FALSE)))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,2440,60), labels = FALSE)))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,2440,60), labels = 1:24)))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,2440,60), labels = c(12, 1:12, 1:12))))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,1440,60), labels = c(12, 1:12, 1:12))))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,1440,60), labels = c('12am','3am','6am','9am','12pm','3pm','6pm','9pm','12am'))))
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,1440,60), labels = label_vector)))
label_vector <- rep('', 25)
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,1440,60), labels = label_vector)))
time_labels <- ('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am')
label_vector <- rep('', 25)
j <- 0
for (j in 1:length(time_labels)){
label_vector[3*j -2] <- time_labels[j]
}
time_labels <- c('12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm', '12am')
label_vector <- rep('', 25)
j <- 0
for (j in 1:length(time_labels)){
label_vector[3*j -2] <- time_labels[j]
}
xyplot(steps ~ minutes | day_type,data = step_interval_day, layout = c(1,2), type = 'l', ylab = 'Steps (per 5-minute interval)', xlab = 'Time of Day', scales = list(x = list(at = seq(0,1440,60), labels = label_vector)))
